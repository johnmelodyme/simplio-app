name: Publish iOS
env:
  FLUTTER_VERSION: '3.0.5'

on:
  workflow_call:
    secrets:
      APP_STORE_CONNECT_TEAM_ID:
        required: true
      DEVELOPER_APP_ID:
        required: true
      DEVELOPER_PORTAL_TEAM_ID:
        required: true
      FASTLANE_APPLE_ID:
        required: true
      FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD:
        required: true
      MATCH_PASSWORD:
        required: true
      GIT_AUTHORIZATION:
        required: true
      PROVISIONING_PROFILE_SPECIFIER:
        required: true
      TEMP_KEYCHAIN_PASSWORD:
        required: true
      TEMP_KEYCHAIN_USER:
        required: true
      DART_DEFINE_API_KEY_DEV:
        required: true
      DART_DEFINE_API_KEY_PROD:
        required: true
      DART_DEFINE_API_URL_DEV:
        required: true
      DART_DEFINE_API_URL_PROD:
        required: true
    inputs:
      environment:
        description: 'String value that determines if production or dev packages are built'
        default: 'dev'
        required: true
        type: string
      major:
        required: false
        type: string
      minor:
        required: false
        type: string
      patch:
        required: false
        type: string

jobs:
  build-ios:
    name: Build iOS
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      - uses: subosito/flutter-action@v2
        with:
         flutter-version: ${{ env.FLUTTER_VERSION }}
      - uses: actions/download-artifact@v3
        with:
          name: generated-files-and-packages

      - name: Write version to the version.yml
        if: ${{ inputs.environment == 'production' }}
        run: |
          echo "---" > ./version.yml
          echo "major: ${{ inputs.major }}" >> ./version.yml
          echo "minor: ${{ inputs.minor }}" >> ./version.yml
          echo "patch: ${{ inputs.patch }}" >> ./version.yml
          tail ./version.yml

      - name: Set version
        if: ${{ inputs.environment == 'production' }}
        uses: maierj/fastlane-action@v2.2.0
        with:
          lane: apply_new_version
          subdirectory: ios

      - name: Generate ios/Flutter/Generated.xcconfig - PRODUCTION
        if: ${{ inputs.environment == 'production' }}
        run: flutter build ios --config-only --release --no-codesign --dart-define=API_URL=${{ secrets.DART_DEFINE_API_URL_PROD }} --dart-define=API_KEY=${{ secrets.DART_DEFINE_API_KEY_PROD }}

      - name: Generate ios/Flutter/Generated.xcconfig - DEVELOPMENT
        if: ${{ inputs.environment != 'production' }}
        run: flutter build ios --config-only --release --no-codesign --dart-define=API_URL=${{ secrets.DART_DEFINE_API_URL_DEV }} --dart-define=API_KEY=${{ secrets.DART_DEFINE_API_KEY_DEV }}


      - name: Run Fastlane
        uses: maierj/fastlane-action@v2.2.0
        with:
          lane: build_and_deploy
          subdirectory: ios
          env: ${{ inputs.environment }}
        env:
          APP_STORE_CONNECT_TEAM_ID: '${{ secrets.APP_STORE_CONNECT_TEAM_ID }}'
          DEVELOPER_APP_ID: '${{ secrets.DEVELOPER_APP_ID }}'
          DEVELOPER_PORTAL_TEAM_ID: '${{ secrets.DEVELOPER_PORTAL_TEAM_ID }}'
          FASTLANE_APPLE_ID: '${{ secrets.FASTLANE_APPLE_ID }}'
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: '${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}'
          MATCH_PASSWORD: '${{ secrets.MATCH_PASSWORD }}'
          GIT_AUTHORIZATION: '${{ secrets.GIT_AUTHORIZATION }}'
          PROVISIONING_PROFILE_SPECIFIER: '${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}'
          TEMP_KEYCHAIN_PASSWORD: '${{ secrets.TEMP_KEYCHAIN_PASSWORD }}'
          TEMP_KEYCHAIN_USER: '${{ secrets.TEMP_KEYCHAIN_USER }}'
          GIT_BRANCH: '${{ github.event.head_commit.message }}'
