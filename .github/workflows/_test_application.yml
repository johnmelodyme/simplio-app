name: Run tests
env:
  FLUTTER_VERSION: '3.0.5'

on:
  workflow_call:
    secrets:
      DART_DEFINE_API_KEY_DEV:
        required: true
      DART_DEFINE_API_URL_DEV:
        required: true
    inputs:
      e2e:
        description: 'Boolean value which trigger running e2e tests'
        default: true
        required: true
        type: boolean
      unitTests:
        description: 'Boolean value which trigger running unitTests tests'
        default: true
        required: true
        type: boolean

jobs:
  generate-code:
    runs-on: macos-latest
    name: Generate code
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - uses: subosito/flutter-action@v2
        with:
         flutter-version: ${{ env.FLUTTER_VERSION }}
      - run: flutter pub get
      - run: flutter packages pub run build_runner build
      - uses: actions/upload-artifact@v3
        with:
          name: generated-files-and-packages
          path: |
            ./**/*.g.dart
            ./**/*.chopper.dart

  analyze-app:
    needs: generate-code
    runs-on: ubuntu-latest
    name: Analyze application
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
         flutter-version: ${{ env.FLUTTER_VERSION }}
      - uses: actions/download-artifact@v3
        with:
          name: generated-files-and-packages
      - name: Analyze files
        run: flutter analyze .
      - name: Verify formatting
        run: flutter format --output=none --set-exit-if-changed .

  tests:
    if: ${{ inputs.unitTests }}
    runs-on: ubuntu-latest
    name: Unit tests
    needs: analyze-app
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
         flutter-version: ${{ env.FLUTTER_VERSION }}
      - uses: actions/download-artifact@v3
        with:
          name: generated-files-and-packages
      - run: flutter test tests/unit_tests/ --reporter expanded

  run-e2e-tests:
    if: ${{ inputs.e2e }}
    runs-on: macos-latest
    name: e2e tests
    needs: analyze-app
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - uses: actions/download-artifact@v3
        with:
          name: generated-files-and-packages
  drive_ios:
    strategy:
      matrix:
        device:
           - "iPhone 13 Pro Simulator"
#          - "iPhone 11 Pro Max Simulator"
#          - "iPhone 12 Pro Simulator"
      fail-fast: false
    runs-on: macos-latest
    needs: run-e2e-tests
    steps:
      - name: List all simulators
        run: xcrun xctrace list devices
      # get UUID simulator and boot a simulator on mac from  command line
      - name: Start Simulator
        run: |
          UDID=$(xcrun xctrace list devices | awk '!/Watch/ && /${{ matrix.device }}/{gsub( /\(|\)/ , "" );print $NF}')
          xcrun simctl boot ${UDID}
          echo running on branch ${GITHUB_REF##*/}
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          # Run flutter integrate tests
      - uses: actions/download-artifact@v3
        with:
          name: generated-files-and-packages
      - name: Start recording video
        run: |
          xcrun simctl io booted recordVideo --codec=h264 recording.mp4 &
          sleep 5
          export RECORDING_PID=${!}
          echo "RECORDING_PID=${RECORDING_PID}" >> $GITHUB_ENV
      - name: Run Application UI Tests on iOS
        run: |
          export API_URL=${{ secrets.DART_DEFINE_API_URL_DEV }}
          export API_KEY=${{ secrets.DART_DEFINE_API_KEY_DEV }}
          flutter pub get
          dart tests/app_tests/test_config_ios.dart
      # Upload Recordings As Artifact
      - name: Stop recording
        if: success() || failure()
        run: |
          echo ${{env.RECORDING_PID}}
          kill -SIGINT ${RECORDING_PID}
          sleep 10
      - name: Upload recordedVideo
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: recorded_video_${{ matrix.device }}
          path: recording.mp4
          retention-days : 3 # days for automatic deletion
      - name: Upload Cucmber json report
        if: failure() || success()
        uses: actions/upload-artifact@v3
        with:
          name: Cucumber_report_${{ matrix.device }}
          path: tests/app_tests/cucumber-report-ios.json
          retention-days : 3 # days for automatic deletion

#DISABLING ANDROID PART TO AVOID RERUN FLOWS BECAUSE OF LONG STARTUP OF EMULATOR
#  drive_android:
#    runs-on: macos-latest
#    #creates a build matrix for your jobs
#    strategy:
#      #set of different configurations of the virtual environment.
#      matrix:
#        api-level: [ 33 ]
#        target: [ google_apis ]
#      fail-fast: false
#    needs: run-e2e-tests
#    steps:
#      - uses: actions/checkout@v3
#      - name: Setup Java
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'temurin'
#      - uses: subosito/flutter-action@v2
#        with:
#          channel: 'stable'
#      - uses: actions/download-artifact@v3
#        with:
#          name: generated-files-and-packages
#      - run: |
#           flutter pub get
#      - name: Run Application UI Tests on Android
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: ${{ matrix.api-level }}
#          disk-size: 8192M
#          heap-size: 2048M
#          sdcard-path-or-size: 4096M
#          target: ${{ matrix.target }}
#          arch: x86_64
#          profile: Nexus 6
#          script:  dart tests/app_tests/test_config_android.dart
#      - name: Upload Cucmber json report
#        if: failure() || success()
#        uses: actions/upload-artifact@v3
#        with:
#          name: Cucumber_report_${{ matrix.api-level }}
#          path: tests/app_tests/cucumber-report-android.json
#          retention-days : 3 # days for automatic deletion
